@model KhotruyenM.Models.Story
@{
    ViewBag.Title = "CreateStory";
    Layout = "~/Views/Shared/FormAdmin.cshtml";
}

@using (Html.BeginForm("CreateStory", "Admin"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" enctype="multipart/form-data">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group" style="display: flex">
        <strong style="margin: 0px 70px 0px 100px; font-size: 20px; color: black">
            TÊN TIẾNG VIỆT:
        </strong>
        <strong style="margin-left: 0px">
            @Html.EditorFor(model => model.vnName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.vnName, "", new { @class = "text-danger" })
        </strong>

        <strong style="margin: 0px 98px 0 70px ; font-size: 20px; color: black">
            AUTHOR:
        </strong>
        <strong>
            @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
        </strong>
    </div>

    <div class="form-group" style="display: flex">
        <strong style="margin: 0px 40px 0px 100px; font-size: 20px; color: black">
            TÊN TIẾNG TRUNG:
        </strong>
        <strong style="margin-left: 0px">
            @Html.EditorFor(model => model.cnName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cnName, "", new { @class = "text-danger" })
        </strong>

        <strong style="margin: 0px 72px 0px 70px; font-size: 20px; color: black">
            TRUYỆN GỐC:
        </strong>
        <strong style="margin-left: -22px">
            @Html.EditorFor(model => model.cnLink, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cnLink, "", new { @class = "text-danger" })
        </strong>

    </div>

        <div class="form-group" style="display: flex">
            <strong style="margin-left: 100px; font-size: 20px; color: black">
                NGÀY TẠO:
            </strong>
            <strong style="margin-left: 118px">
                @Html.EditorFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
            </strong>
            <strong style="margin-left: 70px; font-size: 20px; color: black">
                NGÀY CẬP NHẬT:
            </strong>
            <strong style="margin-left: 20px">
                @Html.EditorFor(model => model.UpdateDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UpdateDate, "", new { @class = "text-danger" })
            </strong>
        </div>
        <div class="form-group" style="display: flex">
            <strong style="margin-left: 100px; font-size: 20px; color: black">
                THỂ LOẠI:
            </strong>
            <strong style="margin-left: 130px">
                @Html.DropDownList("TypeStory", new List<SelectListItem> { new SelectListItem{Text = "Đô thị",Value = "1"},
               new SelectListItem{Text = "Tiên hiệp", Value = "2"},
               new SelectListItem{Text = "Huyền ảo", Value = "3"},
               new SelectListItem{Text = "Kiếm hiệp", Value = "4"},
               new SelectListItem{Text = "Võng Du", Value = "5"},
               new SelectListItem{Text = "Đồng nhân", Value = "6"},
           }, new { style = "width:208px;margin-top:15px;text-align:center;font-size: 20px", @class = "textbox", })
                @Html.ValidationMessageFor(model => model.TypeStory, "", new { @class = "text-danger" })
            </strong>
            <strong style="margin: 0px 130px 0px 76px; font-size: 20px; color: black">
                LƯỢT XEM:
            </strong>
            <strong style="margin-left: -52px">
                @Html.EditorFor(model => model.CountView, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CountView, "", new { @class = "text-danger" })
            </strong>
        </div>

        <div class="form-group" style="display: flex">
            <strong style="margin: 0px 206px 0px 100px; font-size: 20px; color: black">
                ẢNH BÌA:
            </strong>
            <strong style="margin-left: -66px; width: 216px">
                @Html.EditorFor(model => model.Images, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })
                <input type="file" name="fileUpload" id="fileUpload" accept="Image/*" style="display:none;" />
                <input type="button" id="btnUpload" value="Browser" class="btn btn-success" />
            </strong>
            <strong style="margin-left: 68px; font-size: 20px; color: black">
                ĐÁNH GIÁ:
            </strong>
            <strong style="margin-left: 87px">
                @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger", @readonly = "readonly" })
            </strong>
        </div>

        <div class="form-group" style="display: flex">
            <strong style="margin-left: 100px; font-size: 20px; color: black">
                NỘI DUNG TRUYỆN:
            </strong>



            <strong style="margin-left: 35px">
                @Html.EditorFor(model => model.Information, new { htmlAttributes = new { @class = "form-control1" } })
                @Html.ValidationMessageFor(model => model.Information, "", new { @class = "text-danger" })
            </strong>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" style="margin-left: 85px">
                @Html.ActionLink("TRỞ VỀ", "Home", null, new { @class = "back" })
                <input type="submit" value="Create" class="btn btn-default" style="font-size:20px; margin-left: 750px; background-color:honeydew; border: 2px solid black" />
            </div>
        </div>
    </div>
}
<style>

    .back {
        font-size: 20px;
        background-color: honeydew;
        border: 2px solid black;
    }
</style>

@section upload{
    <script>
        $(function () {
            $('#btnUpload').click(function () {
                $('#fileUpload').trigger('click');
            });

            $('#fileUpload').change(function () {
                if (window.FormData !== undefined)
                {
                    var fileUpload = $('#fileUpload').get(0);
                    var files = fileUpload.files;
                    var formData = new FormData();
                    formData.append('file', files[0]);
                    $.ajax({
                        type: 'POST',
                        url: '/Admin/ProcessUpload',
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (urlImage)
                        {
                            $('#pictureUpload').attr('src', urlImage);
                            $('#Images').val(urlImage);
                        },
                        error: function (err)
                        {
                            alert(err.statusText);
                        }
                    });
                }
            })
        });
    </script>
}

